{"version":3,"sources":["components/imgs/plus.png","serviceWorker.js","components/AddItemForm.js","components/Item.js","components/EditItemForm.js","components/ItemsContainer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","AddItemForm","state","name","brand","desc","purchase_date","price","use_category","use_seasons","notes","isClosed","handleChange","target","key","setState","value","handleCheck","e","seasons","checked","push","handleSubmit","preventDefault","fetch","process","REACT_APP_API_URL","method","headers","body","JSON","stringify","then","props","getGear","toggleCollapse","openClose","id","onSubmit","this","src","PlusSign","onClick","placeholder","type","onChange","className","React","Component","Item","item","removeGear","updateGear","_id","Modal","setAppElement","EditItemForm","console","log","event","closeModal","isOpen","modalIsOpen","onRequestClose","category","ItemsContainer","response","json","data","items","bind","editForm","displayItems","map","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.06447522.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.e0d2812e.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport PlusSign from \"./imgs/plus.png\"\nimport Collapsible from 'react-collapsible';\n\nclass AddItemForm extends React.Component{\n\n        state = {\n            name: '',\n            brand: '',\n            desc: '',\n            purchase_date: '',\n            price: 0,\n            use_category: [],\n            use_seasons: [],\n            notes: '',\n            isClosed: false\n            // openClose: 'input_container_closed'\n        }\n    \n    handleChange = ({target}) => {\n        const key = target.name;\n        this.setState({[key]: target.value});\n    };\n\n    handleCheck = (e) => {\n        const seasons = this.state.use_seasons;\n         if(e.target.checked){\n            seasons.push(e.target.value);\n        };\n        this.setState({use_seasons: seasons})\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        fetch(`${process.env.REACT_APP_API_URL}/api/gear`,{\n            method: \"POST\",\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify([this.state])\n        })\n        .then(() => this.setState({\n            name: '',\n            brand: '',\n            desc: '',\n            purchase_date: '',\n            price: 0,\n            use_category: [],\n            use_seasons: [],\n            notes: ''\n        }))\n            .then(this.props.getGear)\n            \n        }\n\n    toggleCollapse = () => {\n        \n        if(this.state.openClose === \"input_container_closed\"){\n            this.setState({openClose: \"input_container_open\"})\n        } else {\n            this.setState({openClose: \"input_container_closed\"})\n        }\n    }\n    \n    render(){\n\n        return (\n            <form id=\"item_form\" onSubmit={this.handleSubmit}>\n\n                <h2><span> <img id=\"open_close\" src={PlusSign} onClick={() => this.toggleCollapse()} /> </span>Add Item to the Closet</h2>\n                <div id={this.state.openClose}>\n                <input \n                    name=\"name\" \n                    placeholder=\"name\" \n                    type='text' \n                    value={this.state.name} \n                    onChange={this.handleChange} />\n\n                <input \n                    name=\"brand\"\n                    placeholder=\"brand\"\n                    type='text' \n                    value={this.state.brand} \n                    onChange={this.handleChange}/>\n            \n                <textarea \n                    name=\"desc\"\n                    placeholder=\"Description\"\n                    type='text' \n                    value={this.state.desc} \n                    onChange={this.handleChange}></textarea>\n            \n                <input \n                    name=\"purchase_date\"\n                    placeholder=\"Purchase date (ex: Jan 2020)\"\n                    type='text' \n                    value={this.state.purchase_date} \n                    onChange={this.handleChange}/>\n\n                <input \n                    name=\"price\"\n                    placeholder=\"price\"\n                    type='number' \n                    value={this.state.price} \n                    onChange={this.handleChange}/>\n\n                <input \n                    name=\"use_category\"\n                    placeholder=\"Use Categories\"\n                    type='text' \n                    value={this.state.use_category} \n                    onChange={this.handleChange}/>\n\n\n                <div className=\"check-container\">\n                <p>Which seasons do you use this item?</p>\n                    <input type=\"checkbox\" name=\"use_seasons\" value=\"Spring\" onClick={this.handleCheck}/>\n                    <label>Spring</label>\n                    <input type=\"checkbox\" name=\"use_seasons\" value=\"Summer\" onClick={this.handleCheck}/>\n                    <label>Summer</label>\n                    <input type=\"checkbox\" name=\"use_seasons\" value=\"Fall\" onClick={this.handleCheck}/>\n                    <label>Fall</label>\n                    <input type=\"checkbox\" name=\"use_seasons\" value=\"Winter\" onClick={this.handleCheck}/>\n                    <label>Winter</label>\n                </div>\n\n                <textarea \n                    name=\"notes\"\n                    placeholder=\"notes\"\n                    type='text' \n                    value={this.state.notes} \n                    onChange={this.handleChange}></textarea>\n\n\n                <button id=\"submit_btn\" type='submit'>Submit</button>\n            </div>\n            {/* </Collapsible> */}\n        </form>\n        );\n    };\n}\n\nexport default AddItemForm;","import React from 'react';\n\n\nconst Item = ({item, removeGear, updateGear}) => {\n\n    return(\n        <div className=\"item-container\">\n\n                <h3>{item.name}</h3>\n                <p>{item.desc}</p>\n                <button onClick={() => removeGear(item._id)}>Remove Item</button>\n                <button onClick={() => updateGear(item)}>Edit Item</button>\n            \n        </div>\n    )\n}\n\n\nexport default Item;","import React from 'react';\nimport Modal from 'react-modal'\nimport '../comp-styling/EditItemForm.css';\n\nModal.setAppElement('#root');\n\nclass EditItemForm extends React.Component{\n    constructor(props){\n        console.log(\"constructor\", props.item)\n        super(props);\n        this.state = {\n            name: this.props.item.name,\n            brand: this.props.item.brand,\n            desc: this.props.item.desc,\n            purchase_date: this.props.item.purchase_date,\n            price: this.props.item.price,\n            use_category: this.props.item.use_category,\n            use_seasons: this.props.item.use_seasons,\n            notes: this.props.item.notes\n    }\n    }\n\n    handleChange = ( { target } ) => {\n        const key = target.name;\n        this.setState({ [key] : target.value }, () => console.log(this.state[key]));\n    }\n    handleSubmit = (event) => {\n        event.preventDefault(); \n        fetch(`${process.env.REACT_APP_API_URL}/api/gear/${this.props.item._id}`, {\n            method: 'PUT',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(this.state)\n        })\n        .then(() => this.setState({\n            name: '',\n            brand: '',\n            desc: '',\n            purchase_date: '',\n            price: 0,\n            use_category: [],\n            use_seasons: [],\n            notes: ''\n        })).then(this.props.getGear)\n        \n        this.props.closeModal();\n    }\n\n    render(){\n        console.log(\"render\",this.props.item)\n        return (\n            <Modal isOpen={this.props.modalIsOpen} onRequestClose={this.props.closeModal}>\n                <form id=\"edit_form\" onSubmit={this.handleSubmit}>\n                    <h2>Edit Item</h2>\n\n                        <input \n                            name=\"name\" \n                            placeholder=\"name\" \n                            type='text' \n                            value={this.state.name} \n                            onChange={this.handleChange} />\n\n                        <input \n                            name=\"brand\"\n                            placeholder=\"brand\"\n                            type='text' \n                            value={this.state.brand} \n                            onChange={this.handleChange}/>\n                    \n                        <textarea \n                            name=\"desc\"\n                            placeholder=\"Description\"\n                            type='text' \n                            value={this.state.desc} \n                            onChange={this.handleChange}></textarea>\n                    \n                        <input \n                            name=\"purchase_date\"\n                            placeholder=\"Purchase date (ex: Jan 2020)\"\n                            type='text' \n                            value={this.state.purchase_date} \n                            onChange={this.handleChange}/>\n\n                        <input \n                            name=\"price\"\n                            placeholder=\"price\"\n                            type='number' \n                            value={this.state.price} \n                            onChange={this.handleChange}/>\n\n                        <input \n                            name=\"use_category\"\n                            placeholder=\"Use Categories\"\n                            type='text' \n                            value={this.state.category} \n                            onChange={this.handleChange}/>\n\n                        <input \n                            name=\"use_seasons\"\n                            placeholder=\"Use Seasons\"\n                            type='text' \n                            value={this.state.use_seasons} \n                            onChange={this.handleChange}/>\n\n                        <textarea \n                            name=\"notes\"\n                            placeholder=\"notes\"\n                            type='text' \n                            value={this.state.notes} \n                            onChange={this.handleChange}></textarea>\n\n\n                    <button id=\"submit_btn\" type='submit'>Submit Changes</button>\n                    <button id=\"close_modal_btn\" type='button' onClick={() => this.props.closeModal()}>Cancel</button>\n                </form>\n            </Modal>\n\n        );\n    };\n}\n\nexport default EditItemForm;","import React from 'react';\nimport AddItemForm from './AddItemForm';\nimport Item from './Item';\nimport EditItemForm from './EditItemForm';\n\n\n\nclass ItemsContainer extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            items: [],\n            modalIsOpen: false,\n            updateGear: {}\n        }\n        this.getGear = this.getGear.bind(this);\n\n    };\n\n    getGear = () => {\n        fetch(`${process.env.REACT_APP_API_URL}/api/gear`)\n            .then(response =>response.json())\n            .then(data => this.setState({items:data}, () => console.log(this.state.items)))\n    };\n\n    removeGear = (id) => {\n        fetch(`${process.env.REACT_APP_API_URL}/api/gear/${id}`, {\n            method: \"DELETE\"\n        })\n            .then(response => response.json())\n            .then(this.getGear)\n    }\n    updateGear = (item) => {\n        this.setState({\n            updateGear:item,\n            modalIsOpen: true\n        })\n       \n    };\n\n    closeModal = () => {\n        this.setState({modalIsOpen: false})\n    };\n\n    componentDidMount(){\n        this.getGear();\n    };\n\n    render(){\n\n        const displayItems = this.state.items.map((item) => {\n            return <Item key={item._id} \n                        item={item} \n                        removeGear={this.removeGear} \n                        updateGear={this.updateGear}/>\n        });\n\n        let editForm;\n        if(this.state.modalIsOpen){\n            editForm =  <EditItemForm key={this.state.updateGear._id} \n                                modalIsOpen={this.state.modalIsOpen} \n                                closeModal={this.closeModal} \n                                item={this.state.updateGear}\n                                getGear={this.getGear}/>\n        }\n\n\n        return(\n            <>\n                <AddItemForm getGear={this.getGear} />\n                <div className=\"items-container\">\n\n                        {displayItems}\n                        {editForm}  \n\n               </div>\n            </>\n        );\n    };\n};\n\nexport default ItemsContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ItemsContainer from './components/ItemsContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ItemsContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}